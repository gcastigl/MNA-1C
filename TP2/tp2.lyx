#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
 \date{}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 4cm
\rightmargin 2cm
\bottommargin 4cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Instituto Tecnológico de Buenos Aires
\begin_inset Note Note
status open

\begin_layout Plain Layout
Revisar indices de imágenes y formulas!
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
Ingeniería Informática
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center
Métodos Numéricos Avanzados
\begin_inset VSpace 1cm
\end_inset


\end_layout

\begin_layout Standard
\align center
===================================================== 
\begin_inset Newline newline
\end_inset


\begin_inset VSpace 1cm
\end_inset


\end_layout

\begin_layout Standard
\align center

\size larger
Trabajo Práctico Número 2
\size default

\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
Filtrado de imágenes utilizando transformada de Fourier discreta
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center
Profesora Noni, Laura
\end_layout

\begin_layout Standard
\begin_inset VSpace 3cm
\end_inset


\end_layout

\begin_layout Standard
\align center
Castiglione, Gonzalo
\end_layout

\begin_layout Standard
\align center
Castro Peña, Gonzalo
\end_layout

\begin_layout Standard
\align center
Wassington, Axel
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\series bold
\size larger
Procesamiento de imágenes I++
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Abstract
Este informe tiene como objetivo analizar espectralmente una imágen en escala
 de grises y utilizar la transformada discreta de Fourier para realizar
 filtrados espaciales.
 Se presentarán diferentes tipos de filtros y el resultado de aplicarlos
 sobre una imágen.
\end_layout

\begin_layout Section
Introducción
\end_layout

\begin_layout Standard
El procesamiento digital de imágenes es el conjunto de técnicas que se aplican
 a las imágenes digitales con el objetivo de mejorar la calidad, facilitar
 la búsqueda de información o comprimirlas.
\begin_inset Newline newline
\end_inset

El proceso de filtrado es el conjunto de técnicas englobadas dentro del
 preprocesamiento de imágenes cuyo objetivo fundamental es obtener, a partir
 de una imágen origen, otra final cuyo resultado sea más adecuado para una
 aplicación específica.
 Cambiando así ciertas características de la misma para facilitar operaciones
 de procesado sobre esta.
\begin_inset Newline newline
\end_inset

Los principales objetivos que se persiguen con la aplicación de filtros
 son:
\end_layout

\begin_layout Itemize
Suavizar la imágen: reducir la cantidad de variaciones de intensidad de
 color entre píxeles vecinos.
\end_layout

\begin_layout Itemize
Eliminar ruido: eliminar aquellos píxeles cuyo nivel de intensidad es muy
 diferente al de sus vecinos y cuyo origen puede estar tanto en el proceso
 de adquisición de la imágen como en el de transmisión.
\end_layout

\begin_layout Itemize
Realzar bordes: destacar los bordes que se localizan en una imágen.
\end_layout

\begin_layout Itemize
Detectar bordes: detectar los píxeles donde se produce un cambio brusco
 en la intensidad luminosa.
\end_layout

\begin_layout Standard
Por tanto, se consideran los filtros como operaciones que se aplican a los
 píxeles de una imágen digital para optimizarla, enfatizar cierta información
 o conseguir un efecto especial en ella.
\end_layout

\begin_layout Standard
El proceso de filtrado puede llevarse a cabo sobre los dominios de frecuencia
 y/o espacio.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Section
Desarrollo
\end_layout

\begin_layout Subsection
Implementación de un programa que computa la TDF 2D.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
A fin de simplificar las explicaciónes sobre la implementación del programa,
 primero se presentarán las diferentes transformadas de Fourier en las que
 este informe esta basado.
\end_layout

\begin_layout Standard
A continuación se presenta la ecuación de la Transformada Discreta de Fourier
 de una secuencia bidimensional 
\begin_inset Formula $x_{n,m}$
\end_inset

 de tamaño 
\begin_inset Formula $N×N$
\end_inset

 (imágen), la cual se define como:
\begin_inset Formula 
\begin{equation}
X_{l,k}=\sum_{n=0}^{N-1}\sum_{m=0}^{N-1}x_{n,m}e^{-i\frac{2\pi}{N}(nl+mk)}
\end{equation}

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Transformada Inversa Discreta de Fourier de una secuencia bidimensional:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
x_{n,m}=\frac{1}{N^{2}}\sum_{l=0}^{N-1}\sum_{k=0}^{N-1}X_{l,k}e^{i\frac{2\pi}{N}(nl+mk)}
\end{equation}

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\emph on
Basandose en la fórmula 
\begin_inset Formula $(1)$
\end_inset


\emph default
 es posible reescribir 
\emph on
la Transformada Discreta de Fourier de una secuencia bidimensional
\emph default
 en función de 
\emph on
Transformadas Discretas de secuencias unidireccionales
\emph default
 de la siguiente manera:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
X_{l,k}=\sum_{l=0}^{N-1}e^{\text{-}i\frac{2\pi}{N}nl}(\sum_{k=0}^{N-1}X_{l,k}e^{-i\frac{2\pi}{N}mk}),
\end{equation}

\end_inset

de manera análoga se puede proceder con la transformada inversa.
 [6]
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Debido a la cantidad de procesamiento que el cálculo de la 
\emph on
Transformada Discreta de Fourier para secuencias bidimensional
\emph default
 implica, el cómupto de la tranformada para una imágen de 
\begin_inset Formula $400x400$
\end_inset

 pixeles podría demorarse hasta dos horas 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Tiempo medido en una compuladora con procesador Intel 
\begin_inset Formula $i3$
\end_inset

 y 
\begin_inset Formula $Ubuntu\,13$
\end_inset


\end_layout

\end_inset

.
 Volviendo su aplicación impráctica.
\begin_inset Newline newline
\end_inset

Frente a este problema, se optó por la realización de una implementación
 de la 
\emph on
Transformada Rápida de Fourier (
\begin_inset Formula $FFT$
\end_inset

)
\emph default
 recursiva para secuencias 
\begin_inset Formula $unidireccionales$
\end_inset

 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Puede encontrarse una implementación de la misma en la refencia [5]
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Debido a que implementacíon realizada de la 
\begin_inset Formula $FFT$
\end_inset

 requeire que las dimensiones de la imágen original sean potencias de 
\begin_inset Formula $2$
\end_inset

 (requerimiento bastante restrictivo) se optó por la complementar a esta
 con una que compute la transformada 
\begin_inset Quotes eld
\end_inset

original
\begin_inset Quotes erd
\end_inset

 sobre la parte de la imágen que la 
\begin_inset Formula $FFT$
\end_inset

 recursiva no puede.
\end_layout

\begin_layout Standard
Una segunda opción tenida en cuenta, consistía en realizar un 
\begin_inset Formula $paddeo$
\end_inset

 con ceros hasta completar a la minima potencia de 
\begin_inset Formula $2$
\end_inset

 mayor a lo que se va a transformar (es decir, para una imágen de 
\begin_inset Formula $400x400$
\end_inset

 pixeles, se la llevaría a 
\begin_inset Formula $512x512$
\end_inset

 pixeles completando con el color negro).
 Esta alternativa fue desestimada ya que requiere retoques sobre la imágen
 a procesar.
\end_layout

\begin_layout Standard
La implementación completa del algoritmo último puede encontrarse en la
 sección 
\begin_inset Formula $Anexo$
\end_inset

, el en punto 
\begin_inset Formula $(1)$
\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Puede encontrarse otras implementaciónes de este algoritmo por ejemplo en
 
\begin_inset Formula $Matlab$
\end_inset

 u 
\begin_inset Formula $Octave$
\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout
En el presente informe se utilizará la versión 
\begin_inset Formula $3.6.4$
\end_inset

 de GNU Octave
\end_layout

\end_inset

 con el nombre de 
\begin_inset Formula $fft2$
\end_inset

.
 Esta implementación utiliza una técnica de 
\begin_inset Quotes eld
\end_inset


\shape italic
divide and conquer
\shape default

\begin_inset Quotes erd
\end_inset

 y esta además desarrollada en un lenguaje compilado, consiguiende de esa
 manera, aún mejor performance con respecto a la implementación presentada
 en el informe.
\end_layout

\begin_layout Subsection
Imágen a tratar
\end_layout

\begin_layout Standard
El archivo 
\emph on

\begin_inset Formula $saturno$
\end_inset


\emph default
 contiene una matriz de 
\begin_inset Formula $400x400$
\end_inset

 píxeles y corresponde a niveles de intensidad luminosa comprendidos entre
 
\begin_inset Formula $0$
\end_inset

 y 
\begin_inset Formula $255$
\end_inset

.
\end_layout

\begin_layout Standard
Para visualizar esta imágen en escala de grises, es necesario establecer
 un mapa de color de 
\begin_inset Formula $255$
\end_inset

 niveles.
\end_layout

\begin_layout Standard
En la Figura 1 se muestra una imágen del planeta Saturno, capturada durante
 la misión Voyager.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename saturno.png
	lyxscale 30
	scale 25

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Imágen de saturno obtenida a partir de las mediciones
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Visualizacion de la amplitud y fase de la transformada de la imágen.
\end_layout

\begin_layout Standard
En esta seccion se va a mostrar 
\end_layout

\begin_layout Subsubsection
Amplitud
\end_layout

\begin_layout Standard
Para el cálculo de la amplitud, dada 
\begin_inset Formula $X$
\end_inset

 (transformada de fourier de 
\begin_inset Formula $x$
\end_inset

), se utilizó el módulo del número complejo obtenido sobre cada valor de
 
\begin_inset Formula $X$
\end_inset

.
 Para normalizarlo se utilizaron dos técnicas.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La primer técnica consiste en realizar un mapeo lineal entre el intervalo
 de valores que toma la matriz transformada de Fourier y el intervalo 
\begin_inset Formula $[0-255]$
\end_inset

 utilizando la siguiente fórmula:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Output_{i}=floor((\frac{absol_{i}}{maxAbsol})*255),
\end{equation}

\end_inset

donde 
\emph on

\begin_inset Formula $maxAbsol$
\end_inset

 
\emph default
es el máximo de las amplitudes, 
\emph on

\begin_inset Formula $absol_{i}$
\end_inset


\emph default
 es cada una de las amplitudes y 
\emph on

\begin_inset Formula $Output_{i}$
\end_inset

 
\emph default
es el píxel de salida.
\end_layout

\begin_layout Standard
Como se puede ver en la fórmula 
\begin_inset Formula $(4)$
\end_inset

, para lograr dicho mapeo, primero se divide el intervalo original por el
 máximo valor absoluto (se lo lleva a 
\begin_inset Formula $[0,1]$
\end_inset

), luego se multiplica por 
\begin_inset Formula $255$
\end_inset

 para dejarlo en el intervalo deseado.
 El problema con esto es que todavía se tienen valores reales (aunque dentro
 del intervalo), mientras que la escala exige valores enteros.
 Es por esto último que se toma la parte entera inferior de lo obtenido
 anteriormente.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Una vez realizado el procedimiento, se obtuvo la imágen mostrada en la figura
 2.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename transformada-amplitud.png
	lyxscale 50
	scale 35

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
imágen de la amplitud de cada píxel de la transformada de fourier de la
 figura 1.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como se puede observar en la figura 
\begin_inset Formula $2$
\end_inset

, hay un grupo de frecuencias (centro de la figura) muy superiores que el
 resto.
 Pero debido a la técnica de mapeo utilizada, no se puede decir mucho más
 al respecto.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En cambio, utilizando una escala logarítmica,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Output_{i}=\frac{255}{log(1+Absol_{i})},
\end{equation}

\end_inset

donde 
\emph on

\begin_inset Formula $absol_{i}$
\end_inset


\emph default
 es cada una de las amplitudes y 
\emph on

\begin_inset Formula $Output_{i}$
\end_inset

 
\emph default
es el píxel de salida.
\end_layout

\begin_layout Standard
Con este nuevo procedimiento, la imágen que se obtiene es la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename transformada-amplitud-log.png
	lyxscale 50
	scale 35

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
imágen logarítmica de la amplitud de cada píxel de la transformada de fourier
 de la figuar 1.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aplicando dicha fórmula, se obtiene una visualización más interesante ya
 que se puede distinguir (además del pico de frecuencia central) una trama
 en el resto de las frecuencias.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\emph on
Nota: Ambas imágenes de la amplitud de la frecuencia están 
\begin_inset Quotes eld
\end_inset

shifteadas
\begin_inset Quotes erd
\end_inset

 para que la frecuencia 
\begin_inset Formula $0$
\end_inset

 quede en el centro.
 Es decir, 
\emph default
se parte la imágen en dos columnas y se cambia el orden.
 Luego se parte la imágen en dos filas y nuevamente se cambia el orden.
 El código para este cambio se presenta en la sección 
\begin_inset Formula $Anexo$
\end_inset

, en el punto 2.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsubsection
Fase
\end_layout

\begin_layout Standard
Para el cálculo de la fase, se utilizó el argumento del número complejo
 obtenido sobre cada valor de 
\begin_inset Formula $X$
\end_inset

.
 Para normalizarlo se utilizó la primera técnica de mapeo, la de mapeo lineal:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Output_{i}=floor(((\frac{args_{i}}{2*maxArg})+1/2)*255),
\end{equation}

\end_inset

donde 
\emph on

\begin_inset Formula $maxArg$
\end_inset

 
\emph default
es el argumento de mayor valor absoluto, 
\emph on

\begin_inset Formula $args_{i}$
\end_inset


\emph default
 es cada uno de los argumentos y 
\emph on

\begin_inset Formula $Output_{i}$
\end_inset

 
\emph default
es el píxel de salida.
\end_layout

\begin_layout Standard
Como se puede ver en la fórmula 
\begin_inset Formula $(6)$
\end_inset

, para lograr dicho mapeo, primero se divide el intervalo original por dos
 veces el máximo valor absoluto (se lo lleva a 
\begin_inset Formula $[-0.5,0.5]$
\end_inset

), luego se suma 
\begin_inset Formula $0.5$
\end_inset

 y multiplica por 
\begin_inset Formula $255$
\end_inset

 para dejarlo en el intervalo deseado.
 El problema con esto es que todavía se tienen valores reales (aunque dentro
 del intervalo), mientras que la escala exige valores enteros.
 Es por esto último que se toma la parte entera inferior de lo obtenido
 anteriormente.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Se pueden obvservar los resulatdos en la figura 4.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename argument.png
	lyxscale 30
	scale 35

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
imágen de la fase de cada píxel de la transformada de fourier de la figuar
 1.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
¿Porque esta imágen queda mas chiquita que las 2 y 3 si las originales son
 del mismo tamaño?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 1cm
\end_inset


\end_layout

\begin_layout Standard
La matriz con los valores obtenidos para la amplitud y para la fase, pueden
 encontrarse en los archivos 
\begin_inset Formula $absolutos.mat$
\end_inset

 y 
\begin_inset Formula $argumentos.mat$
\end_inset

 respectivamente.
\end_layout

\begin_layout Subsection
Aplicacion de distintos filtros a la imágen.
\end_layout

\begin_layout Standard
Como se ve en la figuar 5
\begin_inset Foot
status open

\begin_layout Plain Layout
imágen extraída de un artículo de wikipedia: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://commons.wikimedia.org/wiki/File:Etapas_filtrado_dominio_frecuencia.jpg
\end_layout

\end_inset


\end_layout

\end_inset

, 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
No se como carajo escribir esto de forma agradable.
 Pero empezarlo asi me parece interesante.
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Para la aplicación de los filtros en la frecuencia: Se transformó la señal
 a la frecuencia.
 Se multiplicó la señal transformada por el filtro punto a punto.
 Se destransformó la señal filtrada.
 Y se tomó la parte real de la señal filtrada.El proceso se describe de acuerdo
 a la siguiente imágen
\begin_inset Foot
status open

\begin_layout Plain Layout
imágen extraída de un artículo de wikipedia: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://commons.wikimedia.org/wiki/File:Etapas_filtrado_dominio_frecuencia.jpg
\end_layout

\end_inset


\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename filtrado_imagen.jpg
	lyxscale 50
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Proceso de filtrado de una imágen utilizando filtros en dominio de frecuencia
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El código utilizado para ejecutar este proceso se presenta en la sección
 
\begin_inset Formula $Anexo$
\end_inset

, en el punto 3.
\end_layout

\begin_layout Standard
Debido a la simplicidad de las condiciones de cada filtro, el código utilizado
 no se presenta en este informe pero puede ser encontrado en los archivos
 
\begin_inset Formula $filtro1.m$
\end_inset

, 
\begin_inset Formula $filtroGauss.m$
\end_inset

 y 
\begin_inset Formula $filtroDamero.m$
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsubsection
Filtro 1
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
H_{k,l}=\begin{cases}
0 & 0\leq k\leq400,\text{ }190\leq\text{ }l\mathbf{\leq}210\\
0 & 0\leq l\leq400,190\leq k\mathbf{\leq}210\\
1 & ,\text{ en todo otro caso}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
Resultado:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 1.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
imágen obtenida luego aplicado el filtro 1 sobre la matriz transformada
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename dot-zoom-normal.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Zoom a un punto blanco en la imágen original.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename dot-zoom-filter.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Zoom al mismo punto de la figuar 7 despues de haber aplicado el filtro1.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
También conocido como 
\begin_inset Quotes eld
\end_inset

filtro notch
\begin_inset Quotes erd
\end_inset

.
 Este filtro no permite el paso de señales cuyas frecuencias se encuentran
 comprendidas entre las frecuencias de corte superior e inferior.
 Se utiliza para eliminar interferencia destructiva, encontrar patrones
 en una imágen o eliminar patrones.
 En este caso se puede ver (sobre todo en los puntos negros y blancos (ver
 figuras 7 y 8)) como se repite el patrón cruz a lo largo y ancho de la
 imágen.[1][3]
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

¿que patron cruz?
\begin_inset Quotes erd
\end_inset

, no se como explicarlo, pero ahi hay un patron cruz.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Filtro Gaussiano 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
H_{k,l}=exp(-p*(k^{2}+l^{2}))
\]

\end_inset


\end_layout

\begin_layout Standard
Resultado:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename gaus.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
imágen obtenida luego aplicado el filtro Gaussiano con p=0.1 sobre la matriz
 transformada
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename gausiano-pocaPotencia.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
imágen obtenida luego aplicado el filtro Gaussiano con p=0.00001 sobre la
 matriz transformada
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
También conocido como 
\begin_inset Quotes eld
\end_inset

desenfoque gausiano
\begin_inset Quotes erd
\end_inset

.
 Este filtro mezcla ligeramente las intensidades de los píxeles que estén
 vecinos el uno al otro, en un mapa de bits (imágen), haciendo que la imágen
 pierda algunos detalles minúsculos, y de esta forma se vea más suave.
 
\end_layout

\begin_layout Standard
La figuar 7 muestra los effectos de un desenfoque exagerado, y la figura
 8 los de un pequeño desenfoque.
 Mientras que en la figuara 7 apenas se distingue la zona más clara de la
 imágen de la más oscura, en la figura 8 se distingue claramente la imágen
 original un poco desenfocada.[4]
\begin_inset Note Note
status open

\begin_layout Plain Layout
Falta decir lo de edge detection.
 hace falta?
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Filtro Damero
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
H_{k,l}=\begin{cases}
0 & l+k\text{ es par}\\
1 & l+k\text{ es impar}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
Resultado:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename damero.png
	lyxscale 30
	scale 30

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
imágen obtenida luego aplicado el filtro Damero sobre la matriz transformada
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Este filtro parece haber intercambiado pedazos de la imágen, y haber puesto
 en esos mismos pedazos , los colores opuestos a los de la imágen original.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Parece ser que hay que decir algo aca....
 escrivi lo que creo ver...
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Conclusiones
\begin_inset Note Note
status open

\begin_layout Plain Layout
No dice mucho en esta seccion....
 evidentemente la primera oracion hay que cambiarla.
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Luego de analizados los resultados obtenidos con la transformada discreta
 de fourier.
 Resulta muy notable la cantidad de áreas en donde esta técnica podría tener
 aplicaciones ya que permite realizar filtrado de imágenes.
 Especialmente en el área de la informática.
\end_layout

\begin_layout Standard
Un problema que se encontró en esta implementación del algoritmo, es la
 notable cantidad de procesamiento requerido para la aplicación de filtros
 para una imágen relativamente pequeña (encima en blanco y negro!).
 Es por eso que se recomienda el uso de la 
\begin_inset Formula $FFT$
\end_inset

 (trasformada rápida de Fourier).
\end_layout

\begin_layout Standard
Los filtros pueden tener variadas utilidades.
 Se pueden usar para hacer desde efectos sencillos a efectos complejos.
 Muchos son conocidos y se conocen muchas de sus utilidades, pero otros
 son nuevos y aún tienen utilidades desconocidas o incomprensibles.
\end_layout

\begin_layout Standard
El filtrado de imágenes resulta un tema complejo e interesante.
\end_layout

\begin_layout Section
Bibliografía
\end_layout

\begin_layout Itemize
[1]
\begin_inset Note Note
status open

\begin_layout Plain Layout
Los puse asi porque no se como ponerlo de otra manera
\end_layout

\end_inset

 Frequency Filter- 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://homepages.inf.ed.ac.uk/rbf/HIPR2/freqfilt.htm
\end_layout

\end_inset

 accedio en la fecha 26.06.2013
\end_layout

\begin_layout Itemize
[2] Digital Filter - 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/Digital_filter
\end_layout

\end_inset

 accedio en la fecha 26.06.2013
\end_layout

\begin_layout Itemize
[3] Band-stop Filter - 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/Band-stop_filter
\end_layout

\end_inset

 accedio en la fecha 26.06.2013
\end_layout

\begin_layout Itemize
[4] Gaussian Blur - 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/Gaussian_blur
\end_layout

\end_inset

 accedio en la fecha 26.06.2013
\end_layout

\begin_layout Itemize
[5] A Recursive Implementation of the Fast Fourier Transform - 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://beige.ucs.indiana.edu/B673/node13.html
\end_layout

\end_inset

 accedio en la fecha 27.06.2013
\end_layout

\begin_layout Itemize
[6] Algorithm (FFT2) - 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.originlab.com/www/helponline/Origin/en/UserGuide/Algorithm_(FFT2).html
\end_layout

\end_inset

 accedio en la fecha 27.06.2013
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Anexo
\end_layout

\begin_layout Subsection
Cálculo de transformada de Fourier discreta
\end_layout

\begin_layout LyX-Code
\begin_inset listings
lstparams "extendedchars=true,frameshape={RY},keywordstyle={\color{blue}},language=Octave,numbers=left,numberstyle={\scriptsize},stepnumber=1,tabsize=4"
inline false
status open

\begin_layout LyX-Code

function z = new_fft2(x,inverse)
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	//Se calcula la transformada sobre las columnas de x.
\end_layout

\begin_layout LyX-Code

	n = size(x,2);
\end_layout

\begin_layout LyX-Code

	for u = 1:n 	
\end_layout

\begin_layout LyX-Code

		y(:,u) = new_fft(x(:,u)',inverse)'; 
\end_layout

\begin_layout LyX-Code

	endfor
\end_layout

\begin_layout LyX-Code

	
\end_layout

\begin_layout LyX-Code

	//Si es la transformada inversa hay que dividir por la cantidad de columnas.
\end_layout

\begin_layout LyX-Code

	if(inverse)
\end_layout

\begin_layout LyX-Code

		y = y ./n;
\end_layout

\begin_layout LyX-Code

	endif
\end_layout

\begin_layout LyX-Code

	
\end_layout

\begin_layout LyX-Code

	//Se calcula la transformada sobre las filas de y.
\end_layout

\begin_layout LyX-Code

	y = y';
\end_layout

\begin_layout LyX-Code

	n = size(y,2);
\end_layout

\begin_layout LyX-Code

	for v = 1:n 	
\end_layout

\begin_layout LyX-Code

		z(:,v) = new_fft(y(:,v)',inverse)'; 
\end_layout

\begin_layout LyX-Code

	endfor
\end_layout

\begin_layout LyX-Code

	z = z'; 
\end_layout

\begin_layout LyX-Code

	
\end_layout

\begin_layout LyX-Code

	//Si es la transformada inversa hay que dividir por la cantidad de filas.
\end_layout

\begin_layout LyX-Code

	if(inverse) 	
\end_layout

\begin_layout LyX-Code

		z = z ./n; 
\end_layout

\begin_layout LyX-Code

	endif
\end_layout

\begin_layout LyX-Code

endfunction
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

//Implementacion recursiva de la transformada rápida de fourier.
\end_layout

\begin_layout LyX-Code

function y = new_fft(x,inverse) 
\end_layout

\begin_layout LyX-Code

	n = length(x); 
\end_layout

\begin_layout LyX-Code

	if(mod(n,2) != 0)
\end_layout

\begin_layout LyX-Code

		//Caso base:Si no es divisible por 2 calculo la transformada normal.
\end_layout

\begin_layout LyX-Code

		y = new_ft(x,inverse); 
\end_layout

\begin_layout LyX-Code

	else
\end_layout

\begin_layout LyX-Code

		//Paso inductivo.
\end_layout

\begin_layout LyX-Code

		m = n/2; 	
\end_layout

\begin_layout LyX-Code

		//Llamada recursiva, dividiendo entre pares e impares.
\end_layout

\begin_layout LyX-Code

		y_odd = new_fft(x(1:2:n),inverse); 	
\end_layout

\begin_layout LyX-Code

		y_even = new_fft(x(2:2:n),inverse); 
\end_layout

\begin_layout LyX-Code

		
\end_layout

\begin_layout LyX-Code

		if(inverse)
\end_layout

\begin_layout LyX-Code

			d = exp(2 * pi * i / n) .^ (0:m-1);
\end_layout

\begin_layout LyX-Code

		else
\end_layout

\begin_layout LyX-Code

			d = exp(-2 * pi * i / n) .^ (0:m-1);
\end_layout

\begin_layout LyX-Code

		endif
\end_layout

\begin_layout LyX-Code

		z = d .* y_even; 
\end_layout

\begin_layout LyX-Code

		y = [ y_odd + z , y_odd - z ]; 
\end_layout

\begin_layout LyX-Code

	endif
\end_layout

\begin_layout LyX-Code

endfunction
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

//Implementación de la transformada de fourier
\end_layout

\begin_layout LyX-Code

function y = new_ft(x,inverse)
\end_layout

\begin_layout LyX-Code

	n = length(x);
\end_layout

\begin_layout LyX-Code

	
\end_layout

\begin_layout LyX-Code

	if(inverse) 	
\end_layout

\begin_layout LyX-Code

		d = exp(2 * pi * i / n) .^ (0:n-1); 
\end_layout

\begin_layout LyX-Code

	else 	
\end_layout

\begin_layout LyX-Code

		d = exp(-2 * pi * i / n) .^ (0:n-1); 
\end_layout

\begin_layout LyX-Code

	endif
\end_layout

\begin_layout LyX-Code

	
\end_layout

\begin_layout LyX-Code

	for k = (1:n) 	
\end_layout

\begin_layout LyX-Code

		y(k) = sum(x .* (d.^(k-1))); 
\end_layout

\begin_layout LyX-Code

	endfor 
\end_layout

\begin_layout LyX-Code

endfunction
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Shifteo de la 
\emph on
frecuencia
\emph default
 de una matriz, a fines de centrar la frecuencia 0 en el centro
\end_layout

\begin_layout LyX-Code
\begin_inset listings
lstparams "extendedchars=true,frameshape={RY},keywordstyle={\color{blue}},language=Octave,numbers=left,numberstyle={\scriptsize},stepnumber=1,tabsize=4"
inline false
status open

\begin_layout LyX-Code

//shifteado de las columnas.
\end_layout

\begin_layout LyX-Code

Y = [Y(:,201:400) Y(:,1:200)]
\end_layout

\begin_layout LyX-Code

//shifteado de las filas.
\end_layout

\begin_layout LyX-Code

Y = [Y(201:400,:) ; Y(1:200,:)]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Código para aplicación de un filtro en dominio de frecuencia
\end_layout

\begin_layout LyX-Code
\begin_inset listings
lstparams "extendedchars=true,frameshape={RY},keywordstyle={\color{blue}},language=Octave,numbers=left,numberstyle={\scriptsize},stepnumber=1,tabsize=4"
inline false
status open

\begin_layout LyX-Code

//Se transformó la señal a la frecuencia.
\end_layout

\begin_layout LyX-Code

Y = new_fft2(X,false);
\end_layout

\begin_layout LyX-Code

//Se multiplicó la señal transformada por el filtro punto a punto.
\end_layout

\begin_layout LyX-Code

Y2 = Y .* filtroxxx(400);
\end_layout

\begin_layout LyX-Code

//Se destransformó la señal filtrada.
\end_layout

\begin_layout LyX-Code

X2 = new_fft2(Y2,true);
\end_layout

\begin_layout LyX-Code

//Se tomó la parte real de la señal filtrada.
\end_layout

\begin_layout LyX-Code

Output = real(X2);
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code

\end_layout

\end_body
\end_document
